trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Test_Build
    condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'

  - job: Build_Nupkg
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
    pool:
      vmImage: 'windows-2019'
    steps:
    - powershell: 'echo "##vso[task.setvariable variable=PackageVersion]$($env:Build_SourceBranchName.Substring(1))"'
      displayName: 'PowerShell Script'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: pack
        packagesToPack: 'src/**/*.csproj'
        packDirectory: '$(System.DefaultWorkingDirectory)/dist'
        versioningScheme: byEnvVar
        versionEnvVar: PackageVersion
        verbosityPack: Normal

    - publish: dist
      artifact: nupkg
      displayName: 'Publish artifacts'

- stage: Publish
  dependsOn:
  - Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  jobs:
  - job: Publish_Nupkg
    pool:
      vmImage: 'windows-2019'
    steps:
    - checkout: none

    - download: current
      artifact: nupkg
      displayName: 'Download artifact'

    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg'
        nuGetFeedType: external
        publishFeedCredentials: NuGet
        verbosityPush: Normal